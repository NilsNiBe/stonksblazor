@using MudBlazor

<MudGrid style="background-color: white; border-radius: 5px; box-shadow: 1px 1px 1px gray; align-items: center">
  <MudItem lg="2" md="2" sm="3" xs="12">
    <MudDatePicker DateFormat="dd.MM.yyy" Label="Kauftag" InputVariant="Variant.Outlined" @bind-Date="selectedDate" />
  </MudItem>
  <MudItem lg="2" md="2" sm="3" xs="12">
    <MudTimePicker TimeFormat="HH:mm" Label="Kaufzeit" InputVariant="Variant.Outlined" @bind-Time="selectedTime" />
  </MudItem>
  <MudItem lg="3" md="3" sm="4" xs="12">
    <SharesSeachInput />
  </MudItem>
  <MudItem lg="2" md="2" sm="2" xs="12">
    <MudTextField Variant="Variant.Outlined" Label="Preis" @bind-Value="selectedPrice" InputType="InputType.Number" />
  </MudItem>
  <MudItem lg="1" md="1" sm="2" xs="12">
    <MudTextField Variant="Variant.Outlined" Label="Anzahl" @bind-Value="selectedAmount" InputType="InputType.Number" />
  </MudItem>
  <MudItem lg="1" md="1" sm="8" xs="12">
    <MudFab Color="Color.Primary" Size="Size.Medium" Icon="@Icons.Material.Filled.Add" @onclick="OnAddClicked" />
  </MudItem>
</MudGrid>


@code {
  [Parameter]
  public Action<DateTimeOffset, string, int, double>? ReturnShare { get; set; }

  DateTime? selectedDate = DateTime.Today;
  TimeSpan? selectedTime = new TimeSpan(12, 00, 00);
  string? selectedShare = null;
  double? selectedPrice = null;
  int selectedAmount = 1;


  private void OnAddClicked()
  {
    if (selectedDate.HasValue
        && selectedTime.HasValue
        && string.IsNullOrWhiteSpace(selectedShare)
        && selectedPrice.HasValue
        && selectedAmount > 0
        && ReturnShare != null)
    {
      var date = new DateTimeOffset(
        selectedDate.Value
          .AddHours(selectedTime.Value.Hours)
          .AddMinutes(selectedTime.Value.Minutes));
      ReturnShare(date, selectedShare!, selectedAmount, selectedPrice.Value);
    }
  }
}
